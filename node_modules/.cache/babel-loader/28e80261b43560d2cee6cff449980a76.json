{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/mecellw/Desktop/clean/covidProjects/frontendMentor/portfolio2021/ghPages/michellew.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./Switchmode.scss';var Switchmode=function Switchmode(_ref){var _ref$rounded=_ref.rounded,rounded=_ref$rounded===void 0?true:_ref$rounded;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),darkMode=_useState2[0],setDarkMode=_useState2[1];var handleCheckbox=function handleCheckbox(e){setDarkMode(e.target.checked);};var handleDarkMode=function handleDarkMode(){var body=document.querySelector('body');return darkMode?body.classList.add('dark'):body.classList.remove('dark');};return/*#__PURE__*/_jsxs(\"div\",{className:\"Switchmode\",children:[handleDarkMode(),/*#__PURE__*/_jsxs(\"label\",{htmlFor:\"switchmode\",className:\"switch\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"checkbox\",id:\"switchmode\",checked:darkMode,onChange:handleCheckbox}),/*#__PURE__*/_jsx(\"span\",{className:\"slider \".concat(rounded?'rounded':'',\" \"),children:darkMode?/*#__PURE__*/_jsx(\"i\",{className:\"far fa-sun\"}):/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-moon\"})})]})]});};export default Switchmode;","map":{"version":3,"sources":["/Users/mecellw/Desktop/clean/covidProjects/frontendMentor/portfolio2021/ghPages/michellew.github.io/src/Components/SwitchMode/Switchmode.js"],"names":["React","useState","Switchmode","rounded","darkMode","setDarkMode","handleCheckbox","e","target","checked","handleDarkMode","body","document","querySelector","classList","add","remove"],"mappings":"kTAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,mBAAP,CAEA,GAAMC,CAAAA,UAAU,CAAG,QAAbA,CAAAA,UAAa,MAAwB,uBAArBC,OAAqB,CAArBA,OAAqB,uBAAX,IAAW,4BACTF,QAAQ,CAAC,IAAD,CADC,wCAClCG,QADkC,eACxBC,WADwB,eAGzC,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,CAAD,CAAO,CAC5BF,WAAW,CAACE,CAAC,CAACC,MAAF,CAASC,OAAV,CAAX,CACD,CAFD,CAGA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAC3B,GAAIC,CAAAA,IAAI,CAAGC,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX,CACA,MAAOT,CAAAA,QAAQ,CAAGO,IAAI,CAACG,SAAL,CAAeC,GAAf,CAAmB,MAAnB,CAAH,CAAgCJ,IAAI,CAACG,SAAL,CAAeE,MAAf,CAAsB,MAAtB,CAA/C,CACD,CAHD,CAIA,mBACE,aAAK,SAAS,CAAC,YAAf,WAEGN,cAAc,EAFjB,cAGE,eAAO,OAAO,CAAC,YAAf,CAA4B,SAAS,CAAC,QAAtC,wBACE,cAAO,IAAI,CAAC,UAAZ,CAAuB,EAAE,CAAC,YAA1B,CAAuC,OAAO,CAAEN,QAAhD,CAA0D,QAAQ,CAAEE,cAApE,EADF,cAEE,aAAM,SAAS,kBAAYH,OAAO,CAAG,SAAH,CAAe,EAAlC,KAAf,UACGC,QAAQ,cAAG,UAAG,SAAS,CAAC,YAAb,EAAH,cAAoC,UAAG,SAAS,CAAC,aAAb,EAD/C,EAFF,GAHF,GADF,CAcD,CAxBD,CA0BA,cAAeF,CAAAA,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport './Switchmode.scss';\n\nconst Switchmode = ({ rounded = true }) => {\n  const [darkMode, setDarkMode] = useState(true);\n\n  const handleCheckbox = (e) => {\n    setDarkMode(e.target.checked)\n  }\n  const handleDarkMode = () => {\n    let body = document.querySelector('body')\n    return darkMode ? body.classList.add('dark') : body.classList.remove('dark')\n  }\n  return (\n    <div className=\"Switchmode\">\n\n      {handleDarkMode()}\n      <label htmlFor=\"switchmode\" className=\"switch\">\n        <input type=\"checkbox\" id=\"switchmode\" checked={darkMode} onChange={handleCheckbox} />\n        <span className={`slider ${rounded ? 'rounded' : ''} `}>\n          {darkMode ? <i className=\"far fa-sun\"></i> : <i className=\"fas fa-moon\"></i>}\n        </span>\n\n      </label>\n\n    </div>\n  )\n}\n\nexport default Switchmode\n"]},"metadata":{},"sourceType":"module"}